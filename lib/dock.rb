class Dock

  attr_reader :name,
              :max_rental_time,
              :rental_log,
              :revenue

  def initialize(name, max_rental_time)
    @name = name
    @max_rental_time = max_rental_time
    @rental_log = {}
    @revenue = 0
  end

  def rent(boat, renter)
    @rental_log[boat] = renter
  end

  def charge(boat)
    charge_info = {}
    renter = rental_log[boat]

    charged_hours = boat.hours_rented

    if charged_hours > max_rental_time
      charged_hours = max_rental_time
    end
    charge_info[:card_number] = renter.credit_card_number
    charge_info[:amount] = charged_hours * boat.price_per_hour
    charge_info
  end

# signifies that a boat has been returned and is no longer being rented.
  def return(boat)
    @revenue += charge(boat)[:amount]
  end

# all boats that are currently rented have been rented an additional hour.

# renter here is index (to differentiate between the same boat types.)
  def log_hour
    @rental_log.each do |boat, renter|
      boat.add_hour
    end

  end
# Revenue
# returns the total revenue generated by charging all boats that have been rented and returned. A charge for a boat follows the same rules as iteration 3.
end
